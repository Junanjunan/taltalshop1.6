pip3 install awsebcli (또는 pip3 install awsebcli --upgrade --user ?)

1. 파이썬 버전: 3.6.8 - Amazon Linux 1  (Linux 2는 python version 3.7이냐고 물어보고, 셋팅 환경이 강의와 많이 다름)

2. ebinit
    1) Select a default region: 10)ap-northeast-2 : Asia Pacific (Seoul)
    *) Enter Application Name(default is "taltal_realty_re"): taltal_realty_re
    3) It appears you are using Python. Is this correct?: Y
    4) Select a platform branch.: 2) Python 3.6 running on 64bit Amazon Linux
    5) Do you wish to continue with CodeCommit? n
    6) Do you want to set up SSH for your instances? y
        - id_rsa 선택 (id_rsa 미리 만들어주고, 현재 만들어져있고, 새로 만들때는 ssh-keygen command 실행 - C:/Users/User/ssh 에 있음)  

3. .ebextensions/django.config 생성 - tab X, space만 사용
    option_settings:
      aws:elasticbeanstalk:container:python:
        WSGIPath: config/wsgi.py                # Linux2 선택했으면 WSGIPath: config.wsgi:application

4. eb create
    1) Enter Environment Name(default is new-taltal-realty-dev): 그대로 엔터
    2) Enter DNS CNAME prefix(default is new-taltal-realty-dev): 그대로 엔터
    3) select a load balancer type
        1) classic
        2) application
        3) network
        (default is 2):  그대로 엔터
    4) Would you like to enable Spot Fleet requests for this environment? (y/N): n

5. pipenv install psycopg2

6. requirements.txt 만들어주기
    pipenv install pipenv-to-requirements
    pipenv lock -r > requirements.txt           # 여러 생성 방법이 있지만aws에서 pipenv로 생성하기 위해서는 이렇게 해주어야 한다고 함)

7. (config/settings.py)
    DEBUG = bool(os.environ.get("DEBUG"))
    if DEBUG:
        DATABASE = {
            "defult": {
                "ENGINE": "django.db.backends.sqlite3",
                "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
            }
        }    
    else:
        DATABASE = {
            "defult": {
                "ENGINE": "django.db.backends.postgresql",
                "HOST": os.environ.get("RDS_HOST"),                    # RDS/데이터베이스/Connectivity & security에 (연결&보안)있는 Endpoint 입력
                "NAME": os.environ.get("RDS_NAME"),                    # 방금 만들었던 db 이름(DB 식별자) : "airbnb-clone"  -> "postgres"로 해줘야 Error – FATAL: database name does not exist  해결됨 (postgres로 안해줘도 될때가 있는것 같기도 함...)
                "USER": os.environ.get("RDS_USER"),                    # username에 있었던 것: "postgres"
                "PASSWORD": os.environ.get("RDS_PASSWORD"),            # RDS에 등록한 비번
                "PORT": "5432",                 # Connectivity & security에 있는 Port
                
            }
        }

8. RDS - DB 생성 / Elastic Beanstalk 구성(Configuration)에 Software Modify(편집) 들어가서 RDS_HOST 등 입력
    RDS/Database 들어가서 Create database 클릭
    PostgreSQL 선택
    POSTgreSQL 9.6.15-R1 선택 (나는 9.6.20-R1으로 선택함)
    Free tier 선택 (돈 안냄)
    DB instance identifier -> airbnb-clone
    username -> postgres 그대로
    비번 설정
    나머지 그대로 해두고(퍼블릭 액세스 기능 - 예 로 체크해줌)
    create database

    위까지 해주고 deploy 해주면 아래와 같이 에러 발생
        CalledProcessError: Command '/opt/python/run/venv/bin/pip install -r /opt/python/ondeck/app/requirements.txt' returned non-zero exit status 1.
        이 에러와 psycopg2를 못찾는다는 에러가 발생했는데

9. packages:
     yum:
       postgresql96-devel: []

    여기까지 하고 deploy 하면 사이트 들어가면 무한로딩 되어야 해서 아래와 같은 조치 해주어야 한다고 하는데, 한번 설정하면 다음에 다시 시도할때는 안해줘도 되는 경우 있는 듯

10. RDS DB 설정
    RDS / 데이터베이스 - 보안 - default(sg-~~)/ inbound / Edit / Add Rule - 새로 추가되는 것 All traffic하고
    Source 항목에 custuom 옆에 빈칸에 sg 입력하면 몇가지 선택 나온다 ASWEBSecurityGroup-~~ 선택 해주고 무한 로딩 했었던 페이지 다시 접근 시도(새로고침)하면
    Bad Request (400) 나옴 - 에러는 있지만 최소한 DB랑 연결이 되었다는 것
    
11. (config/settings.py) - 개발모드로 오류 알아보기
    DEBUG = True 로 변경
    DATABASES 위에 if DEBUG:로 해줬떤 부분도 (일시적으로) if DEBUG is False:로 변경(Debug=True인 상태로 PostgreSQL 연결하는 것임)
    ALLOWED_HOSTS = [".elasticbeanstalk.com"]
    settings.py에 있는 SECRET_KEY는 RDS_HOST 입력해준 것처럼 aws Environment properties 에 DJANGO_SECRET 으로 입력하고
    SECRET_KEY = os.environ.get("DJANGO_SECRET") 
  
    여기까지 하고 deploy 하면 기본적인 deploy는 완성

# 26.5 부터 다시 심화
추가적으로 사이트가 복잡해짐에 따라 migrate 등 추가 조치 해주어야 하는듯 함   